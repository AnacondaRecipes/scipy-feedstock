{% set version = "1.16.0" %}

package:
  name: scipy
  version: {{ version }}

source:
  - url: https://github.com/scipy/scipy/releases/download/v{{ version }}/scipy-{{ version }}.tar.gz
    sha256: b5ef54021e832869c8cfb03bc3bf20366cbcd426e02a58e8a58d7584dfbb8f62

build:
  number: 1
  skip: true  # [py<311]

requirements:
  build:
    - {{ stdlib('c') }}
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('fortran') }}
    - pkg-config
  host:
    - python
    - cython >=3.0.8,<3.2.0
    - pybind11 >=2.13.2,<2.14.0
    - pythran >=0.14.0,<0.19.0
    - meson-python >=0.15.0,<0.21.0
    - python-build
    - numpy 2.0 # [py<313]
    - numpy 2.1 # [py==313]
    - pip
    - mkl-devel  {{ mkl }}  # [blas_impl == 'mkl']
    - openblas-devel {{ openblas }}  # [blas_impl == 'openblas']
  run:
    - python
    - numpy >=1.25.2,<2.6
{% set tests_to_skip = "_not_a_real_test" %}

# skip failing win-64 tests - intel fortran related regression
# see https://github.com/scipy/scipy/issues/17075
{% set tests_to_skip = tests_to_skip + " or TestODR" %}  # [win]
{% set tests_to_skip = tests_to_skip + " or test_hermitian_modes" %}  # [win]
{% set tests_to_skip = tests_to_skip + " or test_complex_nonsymmetric_modes" %}  # [win]
{% set tests_to_skip = tests_to_skip + " or test_standard_nonsymmetric_starting_vector" %}  # [win]
{% set tests_to_skip = tests_to_skip + " or test_general_nonsymmetric_starting_vector" %}  # [win]
# Skip test_public_modules_importable on Windows Python 3.12 - fails with STATUS_STACK_BUFFER_OVERRUN (0xC0000409)
# when loading MKL 2025 DLLs in subprocess context. This is a test infrastructure issue, not a functionality
# problem - scipy.sparse imports correctly in normal usage. Likely due to Python 3.12 DLL loading changes
# interacting with MKL 2025 stack layout in subprocess environment.
{% set tests_to_skip = tests_to_skip + " or test_public_modules_importable" %}  # [win and py==312]

# ACTUAL: np.float64(-inf) DESIRED: inf
{% set tests_to_skip = tests_to_skip + " or test_expm1_complex" %}  # [win]
# ACTUAL: array(-0.) DESIRED: array(-5.e-324)
{% set tests_to_skip = tests_to_skip + " or test_log1mexp" %}  # [win]

test:
  imports:
    - scipy
    # reference for public API is effectively
    # https://github.com/scipy/scipy/blob/master/scipy/_lib/tests/test_public_api.py
    - scipy.cluster
    - scipy.cluster.hierarchy
    - scipy.cluster.vq
    - scipy.constants
    - scipy.datasets
    - scipy.differentiate
    - scipy.fft
    - scipy.fftpack
    - scipy.integrate
    - scipy.interpolate
    - scipy.io
    - scipy.io.arff
    - scipy.io.matlab
    - scipy.io.wavfile
    - scipy.linalg
    - scipy.linalg.blas
    - scipy.linalg.cython_blas
    - scipy.linalg.cython_lapack
    - scipy.linalg.interpolative
    - scipy.linalg.lapack
    - scipy.misc
    - scipy.ndimage
    - scipy.odr
    - scipy.optimize
    - scipy.optimize.elementwise
    - scipy.signal
    - scipy.signal.windows
    - scipy.sparse
    - scipy.sparse.csgraph
    - scipy.sparse.linalg
    - scipy.spatial
    - scipy.spatial.distance
    - scipy.spatial.transform
    - scipy.special
    - scipy.stats
    - scipy.stats.contingency
    - scipy.stats.distributions
    - scipy.stats.mstats
    - scipy.stats.qmc
    - scipy.stats.sampling
  requires:
    - pytest
    - pytest-timeout
    - pytest-xdist
    - asv
    - mpmath
    - gmpy2
    - threadpoolctl
    - pooch
    - hypothesis >=6.30
    - array-api-strict >=2.3.1
    # see comment above
    - intel-openmp {{ mkl }}  # [blas_impl == 'mkl']
    # output of numpy.show_config()
    - pyyaml
  commands:

    # Attempt to fix some file number limits when testing on osx.
    - ulimit -n 64000 # [osx]

    # show configuration - required for bug reports to scipy
    - python -c "import sys, scipy, numpy; print(scipy.__version__, numpy.__version__, sys.version_info)"

    # show SIMD features (some failures occur depending on presence/absence of e.g. AVX512)
    - python -c "import numpy; numpy.show_config()"

    # the tests ppc64le and aarch64 are currently run through emulation in QEMU;
    # since this takes much longer, do not run the most heavy-weight tests, i.e. use
    # label='fast'; same for PyPy due to huge runtime; otherwise set label='full'
    {% set label = "'fast'" if (arm64 or aarch64 or ppc64le) else "'full'" %}
    # for signature of scipy.test see below (note default: label='fast'):
    # https://github.com/scipy/scipy/blob/v1.7.0/scipy/_lib/_testutils.py#L27

    # run tests except tests_to_skip
    {% set param = "verbose=1, label=" + label + ", tests=None" %} # set verbose to 2 for additional logs
    {% set extra = "extra_argv=['-k', 'not (" + tests_to_skip + ")', '-n', '3', '--timeout=1800', '--durations=50']" %}
    - python -c "import scipy, sys; sys.exit(not scipy.test({{ param }}, {{ extra }}))"

    # run tests_to_skip tests, but ignore results (to keep a record of failures)
    {% set param_fail = "verbose=2, label=" + label + ", tests=None" %}
    {% set extra_fail = "extra_argv=['-k', '(" + tests_to_skip + ")', '-n', '3', '--timeout=1800', '--durations=50']" %}
    - python -c "import scipy, sys; scipy.test({{ param_fail }}, {{ extra_fail }}); sys.exit(0)"


about:
  home: https://scipy.org/
  license_family: BSD
  license: BSD-3-Clause AND MIT AND BSD-3-Clause-Attribution AND BSD-2-Clause AND BSL-1.0
  license_file:
    - LICENSE.txt
    - LICENSES_bundled.txt
    - scipy/ndimage/LICENSE.txt
    - scipy/optimize/tnc/LICENSE
    - scipy/optimize/_direct/COPYING
    - scipy/io/_fast_matrix_market/LICENSE.txt
    - scipy/io/_fast_matrix_market/fast_matrix_market/dependencies/fast_float/LICENSE-MIT
    - scipy/io/_fast_matrix_market/fast_matrix_market/dependencies/ryu/LICENSE-Boost
    - scipy/_lib/_uarray/LICENSE
    - scipy/_lib/array_api_compat/LICENSE
    - scipy/_lib/array_api_extra/LICENSE
    - subprojects/boost_math/math/LICENSE
    - scipy/_lib/cobyqa/LICENSE
    - scipy/_lib/pocketfft/LICENSE.md
    - scipy/_lib/unuran/license.txt
    - scipy/fft/_pocketfft/LICENSE.md
    - scipy/sparse/linalg/_eigen/arpack/ARPACK/COPYING
    - scipy/sparse/linalg/_propack/PROPACK/license.txt
    - scipy/sparse/linalg/_dsolve/SuperLU/License.txt
    - subprojects/qhull_r/libqhull_r/COPYING.txt
    - scipy/stats/biasedurn/license.txt
  summary: Scientific Library for Python
  description: |
    SciPy is a Python-based ecosystem of open-source software for mathematics,
    science, and engineering.
  doc_url: https://docs.scipy.org/doc/scipy/
  dev_url: https://github.com/scipy/scipy

extra:
  recipe-maintainers:
    - jakirkham
    - msarahan
    - rgommers
    - ocefpaf
    - h-vetinari
  skip-lints:
    - pip_install_args
    - potentially_bad_ignore_run_exports
    - host_section_needs_exact_pinnings
